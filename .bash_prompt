# @gf3’s Sexy Bash Prompt, inspired by “Extravagant Zsh Prompt”
# Shamelessly copied from https://github.com/gf3/dotfiles
# Screenshot: http://i.imgur.com/s0Blh.png

if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
	export TERM=gnome-256color
elif infocmp xterm-256color >/dev/null 2>&1; then
	export TERM=xterm-256color
fi

if tput setaf 1 &> /dev/null; then
	tput sgr0
	if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
		MAGENTA=$(tput setaf 5)
		ORANGE=$(tput setaf 166)
		YELLOW=$(tput setaf 190)
		GREEN=$(tput setaf 76)
		PURPLE=$(tput setaf 91)
		WHITE=$(tput setaf 256)
		CYAN=$(tput setaf 6)
	else
		MAGENTA=$(tput setaf 5)
		ORANGE=$(tput setaf 4)
		YELLOW=$(tput setaf 11)
		GREEN=$(tput setaf 2)
		PURPLE=$(tput setaf 1)
		WHITE=$(tput setaf 7)
		CYAN=""
	fi
	BOLD=$(tput bold)
	RESET=$(tput sgr0)
else
	MAGENTA="\033[1;31m"
	ORANGE="\033[1;33m"
	YELLOW=""
	GREEN="\033[1;32m"
	PURPLE="\033[1;35m"
	WHITE="\033[1;37m"
	CYAN=""
	BOLD=""
	RESET="\033[m"
fi

export MAGENTA
export ORANGE
export YELLOW
export GREEN
export PURPLE
export WHITE
export BOLD
export RESET

function parse_git_dirty() {
	[[ $(git status 2> /dev/null | tail -n1) != *"working directory clean"* ]] && echo "*"
}

function parse_git_branch() {
	git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/"
}

function branch_color() {
	local c_alert=$(tput setaf 9)
	local c_warning=$(tput setaf 11)
	local c_ok=$(tput setaf 10)

    if [ "true" = "$(git rev-parse --is-inside-work-tree 2>/dev/null)" ]; then
        color=""
        if git diff --no-ext-diff --quiet; then
			if [ -n "$(git ls-files --others --exclude-standard)" ]; then
				color=${c_alert}
			else
				if git rev-parse --quiet --verify HEAD >/dev/null; then
					if git diff-index --cached --quiet HEAD --; then
						color=${c_ok}
					else
						color=${c_warning}
					fi
				fi
			fi
        else
            color=${c_alert}
        fi
    else
        return 0
    fi
    echo -n $color
}

if [ -f $(brew --prefix)/etc/bash_completion.d/git-completion.bash ]; then
	GIT_PS1_SHOWUPSTREAM="auto"
	GIT_PS1_SHOWSTASHSTATE=1
	gitPrompt='\[$(branch_color)\]$(__git_ps1 "%s")'
else
	gitPrompt='\[$PURPLE\]$(parse_git_branch)'
fi

export PS1="\[$YELLOW\]\u \[$WHITE\]at \[$GREEN\]\h \[$WHITE\]in \[$CYAN\]\w\[$WHITE\]\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")$gitPrompt\[$WHITE\]\n\$ \[$RESET\]"
export PS2="\[$ORANGE\]→ \[$RESET\]"
unset gitPrompt